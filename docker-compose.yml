version: '3'
services:
    app:
        container_name: highload
        build:
            context: ./docker/php-fpm
            args:
                APP_DEBUG: ${APP_DEBUG}
                TZ: ${TZ}
        networks:
            - highload
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '9000:9000'
        environment:
            XDEBUG_MODE: '${XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${XDEBUG_CONFIG:-client_host=host.docker.internal}'
        volumes:
            - .:/var/www/highload:rw,cached
        depends_on:
            - redis
            - memcached
            - db-master

    nginx:
        container_name: nginx
        build:
            context: ./docker/nginx
            args:
                NGINX_HOST: ${NGINX_HOST}
        ports:
            - '80:80'
            - '443:443'
        networks:
            - highload
        depends_on:
            - app
        volumes:
            - ./public:/var/www/highload/public
            - ./docker/nginx/ssl:/etc/nginx/ssl
            - ./docker/nginx/conf.d:/etc/nginx/conf.d
            - ./docker/nginx/nginx_log:/var/log/nginx
            - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
        command: /bin/bash -c "exec nginx -g 'daemon off;'"

    redis:
        container_name: redis
        image: redis:latest
        networks:
            - highload
        ports:
            - ${REDIS_PORT}:3306

    memcached:
        container_name: memcached
        image: memcached:latest
        networks:
            - highload

    db-master:
        container_name: db-master
        image: mysql:latest
        ports:
            - ${DB_PORT}:3306
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_ROOT_PASSWORD}'
            MYSQL_ROOT_HOST: "%"
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
        volumes:
            - ./docker/db/master/master.sql:/docker-entrypoint-initdb.d/start.sql
            - ./docker/db/master/mysql.master.cnf:/etc/mysql/conf.d/mysql.master.cnf
            - ./docker/db/master/.data/mysql:/var/lib/mysql:rw
        networks:
            - highload

    node:
        container_name: node
        image: node:latest
        tty: true
        restart: always
        working_dir: /var/www/highload
        volumes:
            - .:/var/www/highload
        depends_on:
            - 'app'
        ports:
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'

networks:
    highload:
        driver: bridge
